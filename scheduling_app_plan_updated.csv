Deadline,Task,Assigned To,Details / Deliverable
Dec 1,Add React component tests (RTL + Jest),Frontend 1 + 2,Cover booking and feedback components.
Dec 10,README + Dev Setup Docs,Backend 1 + Frontend 1,Include Docker commands + Swagger URL.
Dec 12,Full system testing (front + back),Entire Team,"Validate booking, feedback, analytics flows."
Dec 15,Pre-Final build freeze,Backend 1,Tag v1.0 release candidate in GitHub.
Dec 16,Deploy staging env (Railway / Vercel),Backend 1 + Frontend 1,Public demo URL available.
Dec 18,Bug fixes from staging testing,All,Resolve critical issues.
Dec 20,Prepare final slides + demo script,All,Architecture + features presentation.
Dec 22,Final deployment (v1.0),Backend 1 + Frontend 1,Production Docker compose deploy.
Dec 25,Final Submission & Demo,Entire Team,"Stable release, docs, video demo submitted."
Dec 5,Swagger v2.0 (final API docs),Backend 1 + 2,Update all endpoints + examples for final frontend integration.
Dec 8,Caching + rate limiting (DRF throttling),Backend 2,Improve API performance & safety.
Nov 1,Booking API (/api/slots/{id}/book/) + Swagger v1.4,Backend 2,Allow students to book; return confirmation.
Nov 10,Analytics API (/api/analytics/course/{id}/) + Swagger v1.6,Backend 1,Return bookings count per time slot; cached query.
Nov 12,Analytics dashboard UI,Frontend 1,Use Recharts to plot course analytics.
Nov 15,GitHub Actions CI tests (front + back),Backend 1 + Frontend 2,Run pytest & Jest on PRs; build Docker images.
Nov 18,Role-based views (TA vs Student),Frontend 1,Dashboard differentiation.
Nov 2,Booking flow (frontend),Frontend 1,Book slot → see confirmation modal.
Nov 20,Extend analytics with TA stats + Swagger v1.7,Backend 2,"Avg. bookings per TA, feedback scores."
Nov 22,Integration tests (API + DB),Backend 1,Booking → Feedback flow tests.
Nov 24,Docker production build ready,Backend 1,Multi-stage Dockerfile (build + run).
Nov 25,Mid-project review checkpoint,Entire Team,Full E2E app demo internal review.
Nov 28,UI polish + responsive layout,Frontend 2,Mobile optimizations.
Nov 3,End-to-end flow testing,All,Test Login → View Slots → Book → Conflict check.
Nov 5,Phase 1 Demo,Entire Team,MVP demo ready (backend + frontend connected).
Nov 7,Add feedback model + /api/feedback/ + Swagger v1.5,Backend 2,Students POST feedback → TAs GET aggregated data.
Nov 8,Frontend feedback form UI,Frontend 2,Modal form for feedback submission.
Oct 16,"Create GitHub org + repos (backend, frontend)",Backend 1 + Frontend 1,"Initialize main branch (protected), set up branch naming rules, enable PR reviews."
Oct 17,Set up Docker Compose (dev),Backend 1,Create docker-compose.yml with Django + Postgres; verify runs locally.
Oct 18,Initialize Django project + apps,Backend 1,"Apps: users, scheduling, feedback, analytics; push to GitHub."
Oct 19,Add JWT Auth (SimpleJWT) + Swagger base,Backend 1,"Endpoints /api/auth/login, /api/auth/register, /api/auth/refresh; auto-generate Swagger (drf-spectacular)."
Oct 20,Database models + migrations,Backend 1 + Backend 2,"Models: User, Course, OfficeHourSlot, Booking; run migrations."
Oct 21,Initialize React frontend (Vite + Tailwind),Frontend 1,"Set up router, layout, login page skeleton."
Oct 22,Add basic routing + auth UI mock,Frontend 2,"Static pages: Login, Dashboard, Calendar placeholder."
Oct 23,Auth API connected + Swagger update v1,Backend 1,Test JWT endpoints; commit Swagger JSON to repo.
Oct 24,Implement /api/courses/ + Swagger v1.1,Backend 2,List courses; include example response in Swagger.
Oct 25,Implement /api/slots/ (endpoints CRUD) + Swagger v1.2,Backend 2,Add filter by course + role permissions; commit Swagger.
Oct 26,Implement Course Settings (Max Slots per Student),Backend 2,Add settings model for each course allowing TA to configure maximum number of slots per student (default = 1). Add backend logic validation before booking.
Oct 26,Frontend auth → real API integration,Frontend 1,Connect JWT login/register with backend API; store token securely.
Oct 27,Write pytest unit tests for auth & models,Backend 1,80% coverage for auth and models.
Oct 27,Implement Section Access Control (CSV Upload or Manual Add),Backend 2 + Frontend 2,Add 'Allowed Students' feature under Course Settings. TAs can upload CSV/Excel file containing student emails to restrict bookings to enrolled students. Frontend provides upload modal; backend parses and stores allowed students.
Oct 28,Integrate Section Validation and Booking Logic,Backend 2,Ensure students can only book if their account email is in the allowed list for that section. Return validation errors if unauthorized. Add API test coverage.
Oct 29,Publish Swagger docs demo build,Backend 2,Deploy Swagger UI (/docs/) for frontend team.
Oct 30,Implement Conflict-Aware Scheduling logic,Backend 1,Prevent overlapping slots for same TA/course; commit Swagger v1.3.
Oct 31,Connect calendar UI to mock slots,Frontend 2,Use FullCalendar with dummy slot data (JSON).
